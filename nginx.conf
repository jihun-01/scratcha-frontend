events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # DNS resolver 추가 (쿠버네티스 DNS)
    resolver 10.96.0.10 valid=30s;
    resolver_timeout 10s;

    # 로그 설정
    log_format main "$remote_addr - $remote_user [$time_local] \"$request\" "
                    "$status $body_bytes_sent \"$http_referer\" "
                    "\"$http_user_agent\" \"$http_x_forwarded_for\"";

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 서버 설정
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # LB 감지 변수 설정
        set $is_lb "false";
        set $is_https "false";
        
        # X-Forwarded-Proto 헤더가 있으면 LB 사용 중
        if ($http_x_forwarded_proto != "") {
            set $is_lb "true";
        }
        
        # HTTPS 감지
        if ($http_x_forwarded_proto = "https") {
            set $is_https "true";
        }
        if ($scheme = "https") {
            set $is_https "true";
        }

        # 정적 파일 캐싱
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }

        # 설정 API 엔드포인트 (환경변수를 JSON으로 반환)
        location /api/config {
            access_log off;
            add_header Content-Type application/json;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type";
            
            # 기본값 설정 (환경변수는 docker-entrypoint.sh에서 처리)
            set $api_url "http://210.109.80.247:8001/api";
            set $env_name "production";
            
            # JSON 응답 반환
            return 200 "{\"apiUrl\":\"$api_url\",\"environment\":\"$env_name\"}";
        }

        # API 프록시 (백엔드 서비스로 프록시)
        location /api/ {
            # 기본 백엔드 서버 설정 (docker-entrypoint.sh에서 치환됨)
            set $backend_server "http://210.109.80.247:8001";
            
            # 백엔드 서버로 프록시 (URI 제거하여 전체 경로 전달)
            proxy_pass $backend_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # 헬스체크 엔드포인트
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # SPA 라우팅 - 모든 요청을 index.html로 리다이렉트
        location / {
            try_files $uri $uri/ /index.html;
            
            # 보안 헤더
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "no-referrer-when-downgrade" always;
            add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
            
            # HSTS 헤더 (HTTPS일 때만)
            if ($is_https = "true") {
                add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            }
            
            # 보안: 숨겨진 파일 접근 차단
            location ~ /\. {
                deny all;
            }
        }

        # 에러 페이지
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # 추가 보안 설정
    client_max_body_size 10M;
    client_body_timeout 12;
    client_header_timeout 12;
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;
}