name: CI/CD Frontend

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: front
      REGISTRY: ${{ secrets.REGISTRY_URL }}
      IMAGE_NAME: ${{ secrets.IMAGE_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to Kakao Cloud Registry
        run: |
          echo "${{ secrets.KCR_PASSWORD }}" | docker login ${{ secrets.KCR_REGISTRY_URL }} -u "${{ secrets.KCR_USER }}" --password-stdin

      - name: Build & Push Docker Image
        # 이미지를 빌드하고 KCR에 푸시합니다.
        # 빌드 캐시를 활용하여 빌드 시간을 단축합니다.
        uses: docker/build-push-action@v5
        with:
            context: .
            push: true
            tags: $REGISTRY/$IMAGE_NAME:latest, $REGISTRY/$IMAGE_NAME:$(date +%Y%m%d%H%M%S)-${{ github.sha }}
            # 최신 이미지에서 빌드 캐시를 가져와 빌드 시간을 단축합니다.
            cache-from: type=registry,ref=$REGISTRY/$IMAGE_NAME:latest
            # 다음 빌드에 사용될 캐시를 인라인으로 저장합니다.
            cache-to: type=inline
            # 빌드 캐시를 활성화하여 레이어 재사용을 최적화합니다.
            platforms: linux/amd64

      - name: Checkout test Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.REPO_NAME }}
          token: ${{ secrets.REPO_TOKEN }}
          path: ${{ secrets.REPO_PATH }}

      - name: Update values.yaml
        run: |
          sed -i "s|tag:.*|tag: \"${IMAGE_TAG}\"|" ${{ secrets.REPO_PATH }}/${{ secrets.HELM_CHART_PATH }}/values.yaml

      - name: Commit & Push changes
        run: |
          cd ${{ secrets.REPO_PATH }}
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add ${{ secrets.HELM_CHART_PATH }}/values.yaml
          git commit -m "Update frontend image tag to ${IMAGE_TAG}"
          git push origin main
